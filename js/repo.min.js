  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Repo.js/repo.min.js at master Â· darcyclarke/Repo.js</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="QJzWlot8bxYwDqxfRbsY+VE1izuURPDkIJLSAdaeW7c=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-136f905f03a0a6ce0292d2e017a31c4fe548e2d0.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-6fb37f4beb26b76fec8bcd25a34a112492a75cd5.css" media="screen" rel="stylesheet" type="text/css" />
    


    <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-eee761b9d5e06efb064aaaf528c44ef8e1601e71.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/assets/github-2de398324ee782e389eecdcbf255684912028c83.js" type="text/javascript"></script>
    

        <link rel='permalink' href='/darcyclarke/Repo.js/blob/450b7e58ec5dcb330df151a6ddc9f67b0453ed77/repo.min.js'>
    <meta property="og:title" content="Repo.js"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/darcyclarke/Repo.js"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/9a2682849ccc5377e10637c38fbb3987?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="A plugin to embed Github repos on your site. Contribute to Repo.js development by creating an account on GitHub."/>

    <meta name="description" content="A plugin to embed Github repos on your site. Contribute to Repo.js development by creating an account on GitHub." />

  <link href="https://github.com/darcyclarke/Repo.js/commits/master.atom" rel="alternate" title="Recent Commits to Repo.js:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob windows vis-public env-production ">
    <div id="wrapper">

      

      

      


        <div class="header header-logged-in true">
          <div class="container clearfix">

            <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

            <div class="divider-vertical"></div>

            
  <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
    <span class="mail-status unread"></span>
  </a>
  <div class="divider-vertical"></div>


              
  <div class="topsearch command-bar-activated">
    <form accept-charset="UTF-8" action="/search" class="command_bar_form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" name="q" id="command-bar" placeholder="Search or type a command" tabindex="1" data-username="chefe" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="commandbar">

  <div class="divider-vertical"></div>
</form>



    <ul class="top-nav">
        <li class="explore"><a href="https://github.com/explore">Explore</a></li>
        <li><a href="https://gist.github.com">Gist</a></li>
        <li><a href="/blog">Blog</a></li>
      <li><a href="http://help.github.com">Help</a></li>
    </ul>
  </div>


            

  
    <ul id="user-links">
      <li>
        <a href="https://github.com/chefe" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/7da6d6e9ee1954b04ed9b424dfe85521?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> chefe
        </a>
      </li>
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
          <span class="mini-icon mini-icon-create"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account settings (You have no verified emails)">
          <span class="mini-icon mini-icon-account-settings"></span>
            <span class="setting_warning">!</span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>



            
          </div>
        </div>


      <div class="global-notice warn"><div class="global-notice-inner"><h2>You don't have any verified emails.  We recommend <a href="https://github.com/settings/emails">verifying</a> at least one email.</h2><p>Email verification will help our support team help you in case you have any email issues or lose your password.</p></div></div>

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu">
          <div class="container">
            <div class="title-actions-bar">
              


                  <ul class="pagehead-actions">

          <li class="subscription">
              <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="QJzWlot8bxYwDqxfRbsY+VE1izuURPDkIJLSAdaeW7c=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="4776063" />
  <div class="context-menu-container js-menu-container js-context-menu">
    <span class="minibutton switcher bigger js-menu-target">
      <span class="js-context-button">
          <span class="mini-icon mini-icon-watching"></span>Watch
      </span>
    </span>

    <div class="context-pane js-menu-content">
      <a href="#" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
      <div class="context-title">Notification status</div>

      <div class="context-body pane-selector">
        <ul class="js-navigation-container">
          <li class="selector-item js-navigation-item js-navigation-target selected">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input checked="checked" id="do_included" name="do" type="radio" value="included" />
              <h4>Not watching</h4>
              <p>You will only receive notifications when you participate or are mentioned.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-watching"></span>
              Watch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_subscribed" name="do" type="radio" value="subscribed" />
              <h4>Watching</h4>
              <p>You will receive all notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-unwatch"></span>
              Unwatch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_ignore" name="do" type="radio" value="ignore" />
              <h4>Ignored</h4>
              <p>You will not receive notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-mute"></span>
              Stop ignoring
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</form>
          </li>

          <li class="js-toggler-container js-social-container starring-container ">
            <a href="/darcyclarke/Repo.js/unstar" class="minibutton js-toggler-target starred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Unstar
            </a><a href="/darcyclarke/Repo.js/star" class="minibutton js-toggler-target unstarred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Star
            </a><a class="social-count js-social-count" href="/darcyclarke/Repo.js/stargazers">750</a>
          </li>

              <li><a href="/darcyclarke/Repo.js/fork" class="minibutton js-toggler-target fork-button lighter" rel="nofollow" data-method="post"><span class="mini-icon mini-icon-fork"></span>Fork</a><a href="/darcyclarke/Repo.js/network" class="social-count">51</a>
              </li>


    </ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/darcyclarke" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">darcyclarke</span>
                  </a></span> /
                <strong><a href="/darcyclarke/Repo.js" class="js-current-repository">Repo.js</a></strong>
              </h1>
            </div>

            

  <ul class="tabs">
    <li><a href="/darcyclarke/Repo.js" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/darcyclarke/Repo.js/network" highlight="repo_network">Network</a></li>
    <li><a href="/darcyclarke/Repo.js/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/darcyclarke/Repo.js/issues" highlight="repo_issues">Issues <span class='counter'>8</span></a></li>

      <li><a href="/darcyclarke/Repo.js/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/darcyclarke/Repo.js/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/darcyclarke/Repo.js/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="context-menu-container js-menu-container js-context-menu">
      <a href="#"
         class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
         data-hotkey="w"
         data-ref="master">
         <span><em class="mini-icon mini-icon-branch"></em><i>branch:</i> master</span>
      </a>

      <div class="context-pane commitish-context js-menu-content">
        <a href="#" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
        <div class="context-title">Switch branches/tags</div>
        <div class="context-body pane-selector commitish-selector js-navigation-container">
          <div class="filterbar">
            <input type="text" id="context-commitish-filter-field" class="js-navigation-enable js-filterable-field js-ref-filter-field" placeholder="Filter branches/tags">
            <ul class="tabs">
              <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
            </ul>
          </div>

          <div class="js-filter-tab js-filter-branches">
            <div data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target selected">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/darcyclarke/Repo.js/blob/master/repo.min.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                  </h4>
                </div>
            </div>
            <div class="no-results">Nothing to show</div>


          </div>

            <div class="js-filter-tab js-filter-tags filter-tab-empty" style="display:none">
              <div data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              </div>
              <div class="no-results">Nothing to show</div>
            </div>

        </div>
      </div><!-- /.commitish-context-context -->
    </div>
  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/darcyclarke/Repo.js" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/darcyclarke/Repo.js/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/darcyclarke/Repo.js/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:b74d2320611a087935d1ccb9d9dc4bab -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:b74d2320611a087935d1ccb9d9dc4bab -->

<div id="slider">


    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>
      <div class="breadcrumb">
        <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/darcyclarke/Repo.js" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">Repo.js</span></a></span></span> / <strong class="final-path">repo.min.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="repo.min.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
      </div>

      <a href="/darcyclarke/Repo.js/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/9a2682849ccc5377e10637c38fbb3987?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/darcyclarke" rel="author">darcyclarke</a></span>
    <time class="js-relative-date" datetime="2012-07-02T09:26:49-07:00" title="2012-07-02 09:26:49">July 02, 2012</time>
    <div class="commit-title">
        <a href="/darcyclarke/Repo.js/commit/72899fe44b88a28ac44497ff2954da1407f8e7e6" class="message">Added fix for file contents branch and re-minified</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/9a2682849ccc5377e10637c38fbb3987?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/darcyclarke">darcyclarke</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/darcyclarke/Repo.js/blob/450b7e58ec5dcb330df151a6ddc9f67b0453ed77/repo.min.js" data-title="Repo.js/repo.min.js at master Â· darcyclarke/Repo.js Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>19 lines (18 sloc)</span>
                <span>16.299 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                        <a class="grouped-button minibutton bigger lighter tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/darcyclarke/Repo.js/edit/master/repo.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  </li>
                <li><a href="/darcyclarke/Repo.js/raw/master/repo.min.js" class="minibutton grouped-button bigger lighter" id="raw-url">Raw</a></li>
                  <li><a href="/darcyclarke/Repo.js/blame/master/repo.min.js" class="minibutton grouped-button bigger lighter">Blame</a></li>
                <li><a href="/darcyclarke/Repo.js/commits/master/repo.min.js" class="minibutton grouped-button bigger lighter" rel="nofollow">History</a></li>
              </ul>
            </div>
                <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*!</span></div><div class='line' id='LC2'><span class="cm"> * @mekwall&#39;s .vangogh() for Syntax Highlighting</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> * All code is open source and dual licensed under GPL and MIT. </span></div><div class='line' id='LC5'><span class="cm"> * Check the individual licenses for more information.</span></div><div class='line' id='LC6'><span class="cm"> * https://github.com/mekwall/jquery-vangogh/blob/master/GPL-LICENSE.txt</span></div><div class='line' id='LC7'><span class="cm"> * https://github.com/mekwall/jquery-vangogh/blob/master/MIT-LICENSE.txt</span></div><div class='line' id='LC8'><span class="cm"> */</span></div><div class='line' id='LC9'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:{([a-zA-Z0-9,-]*)}&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)}</span><span class="k">return</span><span class="p">[]},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:{&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:{&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">g</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:{[a-zA-Z0-9,-]*})&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="nx">e</span><span class="p">},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;([,]?&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;:{[a-zA-Z0-9,-]*}[,]?)&quot;</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="p">)}},</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">numberRange</span><span class="o">:</span><span class="sr">/^([0-9]+)-([0-9]+)$/</span><span class="p">,</span><span class="nx">pageNumber</span><span class="o">:</span><span class="sr">/-([0-9]+)$/</span><span class="p">,</span><span class="nx">multilineBegin</span><span class="o">:</span><span class="sr">/&lt;span class=&quot;([\w-_][^&quot;]+)&quot;&gt;(?:.[^&lt;]*(?!&lt;\/span&gt;)|)$/ig</span><span class="p">,</span><span class="nx">multilineEnd</span><span class="o">:</span><span class="sr">/(&lt;span class=&quot;([\w-_][^&quot;]+)&quot;&gt;)?(?:.[^&lt;]*)?(&lt;\/span&gt;)/ig</span><span class="p">};</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">vanGogh</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">e</span><span class="p">)</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">100</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">k</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&gt;=</span><span class="mi">10</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">source</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">){</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">crossDomain</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;ERROR: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">},</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="p">()}});</span><span class="k">return</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">hljs</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">$</span><span class="p">.</span><span class="nx">getScript</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">autoload</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="p">()});</span><span class="k">return</span><span class="p">}</span><span class="nx">j</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;pre,code&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-line&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-highlight&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">[]),</span><span class="nx">b</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;array&quot;</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&lt;=-</span><span class="mi">1</span><span class="p">){</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">10</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">numberRange</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">+=</span><span class="s2">&quot;,#&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-line:contains(&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">html</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39;&lt;span class=&quot;vg-highlight&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">))}),</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">))}}}),</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;vg-container&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="s2">&quot;vg-&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">++</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">source</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">highlightBlock</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">tab</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">html</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{},</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">firstLine</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">numbers</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">+=</span><span class="s1">&#39;&lt;a class=&quot;vg-number&quot; rel=&quot;#&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">multilineEnd</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">i</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="k">delete</span> <span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="nx">t</span><span class="o">--</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">multilineBegin</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">++</span><span class="p">,</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">q</span><span class="o">+=</span><span class="s1">&#39;&lt;div class=&quot;vg-line&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">}),</span><span class="nx">q</span><span class="o">=</span><span class="s1">&#39;&lt;code class=&quot;vg-code&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;&lt;/code&gt;&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">numbers</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="s1">&#39;&lt;div class=&quot;vg-gutter&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-number&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">)){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;vg-highlight&quot;</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">()),</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">pageNumber</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">e</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">?</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">?</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">:</span><span class="nx">j</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">r</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-gutter&quot;</span><span class="p">),</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">outerWidth</span><span class="p">(),</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">animateGutter</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scroll</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">!==</span><span class="nx">w</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">&gt;</span><span class="nx">v</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">)</span><span class="nx">w</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">!==</span><span class="nx">w</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">w</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">u</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="o">-</span><span class="nx">v</span><span class="p">}).</span><span class="nx">show</span><span class="p">().</span><span class="nx">stop</span><span class="p">().</span><span class="nx">animate</span><span class="p">({</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">})},</span><span class="mi">500</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">w</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">x</span><span class="p">),</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}).</span><span class="nx">show</span><span class="p">()})}</span><span class="k">else</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;vg-code&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">dblclick</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">maxLines</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.vg-line&quot;</span><span class="p">).</span><span class="nx">height</span><span class="p">(),</span><span class="nx">z</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">)),</span><span class="nx">A</span><span class="o">=</span><span class="nx">y</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">maxLines</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">z</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">minHeight</span><span class="o">:</span><span class="nx">y</span><span class="o">+</span><span class="nx">z</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="nx">A</span><span class="p">})}</span><span class="nx">h</span><span class="p">.</span><span class="nx">highlight</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">highlight</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)})}}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">moveToElementText</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">createRange</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getSelection</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">selectNodeContents</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeAllRanges</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addRange</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">language</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">firstLine</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">maxLines</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">numbers</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">highlight</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">animateGutter</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">autoload</span><span class="o">:</span><span class="s2">&quot;http://softwaremaniacs.org/media/soft/highlight/highlight.pack.js&quot;</span><span class="p">,</span><span class="nx">tab</span><span class="o">:</span><span class="s2">&quot;    &quot;</span><span class="p">};</span><span class="nx">h</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">n</span><span class="p">();</span><span class="k">return</span> <span class="nx">j</span><span class="p">}})(</span><span class="nx">jQuery</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">hljs</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hljs</span><span class="o">:!</span><span class="mi">1</span><span class="p">);</span></div><div class='line' id='LC10'><br/></div><div class='line' id='LC11'><span class="cm">/*!</span></div><div class='line' id='LC12'><span class="cm"> * Repo.js</span></div><div class='line' id='LC13'><span class="cm"> * @author Darcy Clarke</span></div><div class='line' id='LC14'><span class="cm"> *</span></div><div class='line' id='LC15'><span class="cm"> * Copyright (c) 2012 Darcy Clarke</span></div><div class='line' id='LC16'><span class="cm"> * Dual licensed under the MIT and GPL licenses.</span></div><div class='line' id='LC17'><span class="cm"> * http://darcyclarke.me/</span></div><div class='line' id='LC18'><span class="cm"> */</span></div><div class='line' id='LC19'>&nbsp;<span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">repo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">escape</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">k</span><span class="o">++</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">k</span><span class="o">++</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">k</span><span class="o">++</span><span class="p">);</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="nx">r</span><span class="o">&amp;</span><span class="mi">3</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">4</span><span class="o">|</span><span class="nx">q</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="o">|</span><span class="nx">p</span><span class="o">&gt;&gt;</span><span class="mi">6</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="o">&amp;</span><span class="mi">63</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">q</span><span class="p">)){</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="mi">64</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">p</span><span class="p">)){</span><span class="nx">l</span><span class="o">=</span><span class="mi">64</span><span class="p">}}</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">return</span> <span class="nx">s</span><span class="p">},</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="sr">/[^A-Za-z0-9\+\/\=]/g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">v</span><span class="p">)){}</span><span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^A-Za-z0-9\+\/\=]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">do</span><span class="p">{</span><span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="o">++</span><span class="p">));</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="o">++</span><span class="p">));</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="o">++</span><span class="p">));</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">m</span><span class="o">++</span><span class="p">));</span><span class="nx">t</span><span class="o">=</span><span class="nx">q</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="o">|</span><span class="nx">p</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">4</span><span class="o">|</span><span class="nx">o</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;</span><span class="mi">3</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">6</span><span class="o">|</span><span class="nx">n</span><span class="p">;</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">!=</span><span class="mi">64</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">s</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">!=</span><span class="mi">64</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">return</span> <span class="nx">unescape</span><span class="p">(</span><span class="nx">u</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;left&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="nx">height</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1&quot;</span><span class="p">).</span><span class="nx">outerHeight</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">))</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-bottom&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">})}</span><span class="k">else</span><span class="p">{</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.page.active&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="s2">&quot;absolute&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">).</span><span class="nx">end</span><span class="p">().</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">delay</span><span class="p">(</span><span class="mi">250</span><span class="p">).</span><span class="nx">queue</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="s2">&quot;relative&quot;</span><span class="p">).</span><span class="nx">dequeue</span><span class="p">()})}};</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">user</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">branch</span><span class="o">:</span><span class="s2">&quot;master&quot;</span><span class="p">,</span><span class="nx">css</span><span class="o">:</span><span class="s1">&#39;@font-face{font-family:&quot;Octicons Regular&quot;;src:url(&quot;https://a248.e.akamai.net/assets.github.com/fonts/octicons/octicons-regular-webfont.eot?639c50d4&quot;);src:url(&quot;https://a248.e.akamai.net/assets.github.com/fonts/octicons/octicons-regular-webfont.eot?639c50d4#iefix&quot;) format(&quot;embedded-opentype&quot;),url(&quot;https://a248.e.akamai.net/assets.github.com/fonts/octicons/octicons-regular-webfont.woff?0605b255&quot;) format(&quot;woff&quot;),url(&quot;https://a248.e.akamai.net/assets.github.com/fonts/octicons/octicons-regular-webfont.ttf?f82fcba7&quot;) format(&quot;truetype&quot;),url(&quot;https://a248.e.akamai.net/assets.github.com/fonts/octicons/octicons-regular-webfont.svg?1f7afa21#newFontRegular&quot;) format(&quot;svg&quot;);font-weight:normal;font-style:normal}.repo,.repo *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box}.repo ul *{display:block;font-family:sans-serif;font-size:13px;line-height:18px}.repo{width:100%;margin:0 0 15px 0;position:relative;padding-bottom:1px;color:#555;overflow:hidden;height:300px;-webkit-transition:height .25s;-moz-transition:height .25s;-o-transition:height .25s;-ms-transition:height .25s;transition:height .25s}.repo .page{background:#f8f8f8;border:4px solid rgba(0,0,0,0.08);border-radius:3px;-ms-filter:&quot;alpha(opacity=0)&quot;;filter:alpha(opacity=0);opacity:0;left:100%;width:98%;position:absolute;-webkit-transition:all .25s;-moz-transition:all .25s;-o-transition:all .25s;-ms-transition:all .25s;transition:all .25s}.repo .page.active{left:1%!important;-ms-filter:&quot;alpha(opacity=100)&quot;;filter:alpha(opacity=100);opacity:1;display:block}.repo .page.left{left:-100%}.repo .loader{position:absolute;display:block;width:100%;height:300px;top:0;left:0;background:url(https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1329872007) no-repeat center 50%}.repo.loaded .loader{display:none}.repo h1{padding:0 0 0 10px;font-family:sans-serif;font-size:20px;line-height:26px;color:#000;font-weight:normal}.repo h1 a:nth-of-type(1),.repo h1 a.active{font-weight:bold}.repo h1 a.active,.repo h1 a.active:active,.repo h1 a.active:visited,.repo h1 a.active:hover{color:#000}.repo h1 a,.repo h1 a:active,.repo h1 a:visited,.repo h1 a:hover{color:#4183c4;text-decoration:none}.repo h1 a:after{content:&quot;/&quot;;color:#999;padding:0 5px;font-weight:normal}.repo h1 a:last-child:after{content:&quot;&quot;}.repo .page,.repo ul{zoom:1}.repo .page:before,.repo .page:after,.repo ul:before,.repo ul:after{content:&quot;&quot;;display:table}.repo .page:after,.repo ul:after{clear:both}.repo ul{border:1px solid rgba(0,0,0,0.25);margin:0;padding:0}.repo li{width:100%;margin:0;padding:0;float:left;border-bottom:1px solid #ccc;position:relative;white-space:nowrap}.repo li.titles{background:-webkit-linear-gradient(#fafafa,#eaeaea);background:-moz-linear-gradient(#fafafa,#eaeaea);background:-o-linear-gradient(#fafafa,#eaeaea);background:-ms-linear-gradient(#fafafa,#eaeaea);background:linear-gradient(#fafafa,#eaeaea);font-weight:bold;padding:10px 10px 8px 36px;text-shadow:0 1px 0 #fff}.repo li:before{content:&quot;ï &quot;;font-family:&quot;Octicons Regular&quot;;position:absolute;top:10px;left:10px;font-size:18px;-webkit-font-smoothing:antialiased}.repo li.dir:before{content:&quot;ï &quot;;color:#80a6cd}.repo li.titles:before,.repo li.back:before{content:&quot;&quot;}.repo li:last-child{border:0;padding-bottom:none;margin:0}.repo li a,.repo li a:visited,.repo li a:active{color:#4183c4;width:100%;padding:10px 10px 8px 36px;display:block;text-decoration:none}.repo li a:hover{text-decoration:underline}.repo li span{display:inline-block}.repo li span:nth-of-type(1){width:30%}.repo li span:nth-of-type(2){width:20%}.repo li span:nth-of-type(3){width:40%}.repo .vg-container{position:relative;overflow:auto;white-space:pre!important;word-wrap:normal!important}.repo .vg-container,.repo .vg-code{border:0;margin:0;overflow:auto}.repo .vg-code .vg-line,.repo .vg-gutter .vg-number{display:block;height:1.5em;line-height:1.5em!important}.repo .vg-gutter{float:left;min-width:20px;width:auto;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.repo .vg-number{cursor:pointer}.repo .vg-container{font-family:&quot;Bitstream Vera Sans Mono&quot;,&quot;Courier New&quot;,monospace;font-size:13px;border:1px solid #ddd}.repo .vg-gutter{background-color:#ececec;border-right:1px solid #ddd;text-align:right;color:#aaa;padding:1em .5em;margin-right:.5em}.repo .vg-code *::-moz-selection,.repo .vg-code *::-webkit-selection,.repo .vg-code *::selection,.repo .vg-line.vg-highlight{background-color:#ffc}.repo .vg-line span.vg-highlight{color:blue;font-weight:bold;text-decoration:underline}.repo .vg-container .vg-code{display:block;padding:1em .5em;background:#fff}.repo .vg-code{color:#000;background:#f8f8ff;border:0;padding:.4em}.repo .vg-code .comment,.repo .vg-code .template_comment,.repo .vg-code .diff .header,.repo .vg-code .javadoc{color:#998;font-style:italic}.repo .vg-code .keyword,.repo .vg-code .css .rule .keyword,.repo .vg-code .winutils,.repo .vg-code .javascript .title,.repo .vg-code .lisp .title,.repo .vg-code .subst{color:#000;font-weight:bold}.vg-code .number,.vg-code .hexcolor{color:#40a070}.vg-code .string,.repo .vg-code .tag .value,.repo .vg-code .phpdoc,.repo .vg-code .tex .formula{color:#d14}.repo .vg-code .title,.repo .vg-code .id{color:#900;font-weight:bold}.repo .vg-code .javascript .title,.repo .vg-code .lisp .title,.repo .vg-code .subst{font-weight:normal}.repo .vg-code .class .title,.repo .vg-code .haskell .label,.repo .vg-code .tex .command{color:#458;font-weight:bold}.repo .vg-code .tag,.repo .vg-code .tag .title,.repo .vg-code .rules .property,.repo .vg-code .django .tag .keyword{color:#000080;font-weight:normal}.repo .vg-code .attribute,.repo .vg-code .variable,.repo .vg-code .instancevar,.repo .vg-code .lisp .body{color:#008080}.repo .vg-code .regexp{color:#009926}.repo .vg-code .class{color:#458;font-weight:bold}.repo .vg-code .symbol,.repo .vg-code .ruby .symbol .string,.repo .vg-code .ruby .symbol .keyword,.repo .vg-code .ruby .symbol .keymethods,.repo .vg-code .lisp .keyword,.repo .vg-code .tex .special,.repo .vg-code .input_number{color:#990073}.repo .vg-code .builtin,.repo .vg-code .built_in,.repo .vg-code .lisp .title{color:#0086b3}.repo .vg-code .codeprocessor,.repo .vg-code .pi,.repo .vg-code .doctype,.repo .vg-code .shebang,.repo .vg-code .cdata{color:#999;font-weight:bold}.repo .vg-code .deletion{background:#fdd}.repo .vg-code .addition{background:#dfd}.repo .vg-code .diff .change{background:#0086b3}.repo .vg-code .chunk{color:#aaa}.repo .vg-code .tex .formula{-ms-filter:&quot;alpha(opacity=50)&quot;;filter:alpha(opacity=50);opacity:.5}&#39;</span><span class="p">},</span><span class="nx">c</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">extensions</span><span class="o">=</span><span class="p">{</span><span class="nx">as</span><span class="o">:</span><span class="s2">&quot;actionscript&quot;</span><span class="p">,</span><span class="nx">coffee</span><span class="o">:</span><span class="s2">&quot;coffeescript&quot;</span><span class="p">,</span><span class="nx">css</span><span class="o">:</span><span class="s2">&quot;css&quot;</span><span class="p">,</span><span class="nx">html</span><span class="o">:</span><span class="s2">&quot;html&quot;</span><span class="p">,</span><span class="nx">js</span><span class="o">:</span><span class="s2">&quot;javascript&quot;</span><span class="p">,</span><span class="nx">md</span><span class="o">:</span><span class="s2">&quot;markdown&quot;</span><span class="p">,</span><span class="nx">php</span><span class="o">:</span><span class="s2">&quot;php&quot;</span><span class="p">,</span><span class="nx">py</span><span class="o">:</span><span class="s2">&quot;python&quot;</span><span class="p">,</span><span class="nx">rb</span><span class="o">:</span><span class="s2">&quot;ruby&quot;</span><span class="p">,};</span><span class="nx">g</span><span class="p">.</span><span class="nx">repo</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">folders</span><span class="o">:</span><span class="p">[],</span><span class="nx">files</span><span class="o">:</span><span class="p">[]};</span><span class="nx">g</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">css</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">css</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#repojs_css&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;style id=&quot;repojs_css&quot;&gt;&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">css</span><span class="p">))}</span><span class="nx">a</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;https://api.github.com/repos/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">user</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;/git/trees/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">branch</span><span class="o">+</span><span class="s2">&quot;?recursive=1&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="p">{},</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;jsonp&quot;</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">tree</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!--</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">tree</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;loaded&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.page&quot;</span><span class="p">).</span><span class="nx">first</span><span class="p">(),</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="s2">&quot;blob&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.page&quot;</span><span class="p">).</span><span class="nx">first</span><span class="p">();</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">repo</span><span class="p">,</span><span class="nx">output</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">path</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span><span class="nx">arr</span><span class="o">=</span><span class="nx">path</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">),</span><span class="nx">file</span><span class="o">=</span><span class="nx">arr</span><span class="p">[(</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)],</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">arr</span><span class="o">=</span><span class="nx">arr</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">id</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">namespace</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">arr</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">id</span><span class="o">=</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;_split_&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="s2">&quot;_dot_&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">folders</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">==</span><span class="nx">m</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="kc">true</span><span class="p">}});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">output</span><span class="o">!==</span><span class="nx">k</span><span class="p">){</span><span class="nx">output</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;ul li.back&quot;</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;li class=&quot;dir&quot;&gt;&lt;a href=&quot;#&quot; data-id=&quot;&#39;</span><span class="o">+</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="nx">output</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;ul li&quot;</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">after</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;li class=&quot;dir&quot;&gt;&lt;a href=&quot;#&quot; data-id=&quot;&#39;</span><span class="o">+</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span><span class="p">))}</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">folders</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">folders</span><span class="o">:</span><span class="p">[],</span><span class="nx">files</span><span class="o">:</span><span class="p">[],</span><span class="nx">element</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;page&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;ul&gt;&lt;li class=&quot;titles&quot;&gt;&lt;span&gt;name&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;back&quot;&gt;&lt;a href=&quot;#&quot;&gt;..&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/page&gt;&#39;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">)[</span><span class="mi">0</span><span class="p">]});</span><span class="nx">l</span><span class="o">=</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">folders</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="nx">output</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">folders</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">element</span><span class="p">);</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">folders</span><span class="p">[</span><span class="nx">l</span><span class="p">]});</span><span class="nx">output</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;ul&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;li class=&quot;file&quot;&gt;&lt;a href=&quot;#&quot; data-path=&quot;&#39;</span><span class="o">+</span><span class="nx">path</span><span class="o">+</span><span class="s1">&#39;&quot; data-id=&quot;&#39;</span><span class="o">+</span><span class="nx">id</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">file</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span><span class="p">));</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">files</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">file</span><span class="p">)});</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.page&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.repo&quot;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;file&quot;</span><span class="p">)){</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">legnth</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">j</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;https://api.github.com/repos/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">user</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;/contents/&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;?ref=&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">branch</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="p">{},</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;jsonp&quot;</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;file page&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#39;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">text</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">.</span><span class="nx">extensions</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">file</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">extensions</span><span class="p">[</span><span class="nx">p</span><span class="p">])}</span><span class="nx">j</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">content</span><span class="p">)).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;&amp;amp;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;lt;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&gt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;gt;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;/g</span><span class="p">,</span><span class="s2">&quot;&amp;quot;&quot;</span><span class="p">));</span><span class="nx">j</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;pre&quot;</span><span class="p">).</span><span class="nx">vanGogh</span><span class="p">();</span><span class="nx">f</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">)},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">){</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Request Error:&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">)}}})}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;dir&quot;</span><span class="p">)){</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.active&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">).</span><span class="nx">end</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;a href=&quot;#&quot; data-id=&quot;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; class=&quot;active&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">text</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;&lt;/a&gt;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;back&quot;</span><span class="p">)){</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1 a&quot;</span><span class="p">).</span><span class="nx">last</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">id</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_split_&quot;</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;_split_&quot;</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">namespace</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.page&quot;</span><span class="p">).</span><span class="nx">first</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1 a&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]){</span><span class="nx">l</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">)}</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1 a&quot;</span><span class="p">).</span><span class="nx">slice</span><span class="p">((</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;h1 a&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="nx">f</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">)}}}})},</span><span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">){</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Request Error:&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">)}}});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;repo&quot;&gt;&lt;h1&gt;&lt;a href=&quot;#&quot; data-id=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">namespace</span><span class="o">+</span><span class="s1">&#39;_split_default&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&lt;/a&gt;&lt;/h1&gt;&lt;div class=&quot;loader&quot;&gt;&lt;/div&gt;&lt;div class=&quot;page&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">namespace</span><span class="o">+</span><span class="s1">&#39;_split_default&quot;&gt;&lt;ul&gt;&lt;li class=&quot;titles&quot;&gt;&lt;span&gt;name&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))})}})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>

      <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
      <div id="jump-to-line" style="display:none">
        <h2>Jump to Line</h2>
        <form accept-charset="UTF-8" class="js-jump-to-line-form">
          <input class="textfield js-jump-to-line-field" type="text">
          <div class="full-button">
            <button type="submit" class="classy">
              Go
            </button>
          </div>
        </form>
      </div>

    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2012 <span title="0.07756s from fe2.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus command bar</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
        <dd>Preview comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
          <dd>Preview comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.07905' data-host='fe2'></span>
    
  </body>
</html>

